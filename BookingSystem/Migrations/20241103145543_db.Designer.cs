// <auto-generated />
using System;
using BookingSystem.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241103145543_db")]
    partial class db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingSystem.Models.BookingModel", b =>
                {
                    b.Property<int>("bookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookingId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("UpId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("bookedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("cancelAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("classId")
                        .HasColumnType("int");

                    b.Property<string>("className")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ssCheckedIn")
                        .HasColumnType("bit");

                    b.Property<int>("statusId")
                        .HasColumnType("int");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("totalHour")
                        .HasColumnType("datetime2");

                    b.Property<int>("upId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bookingId");

                    b.HasIndex("classId");

                    b.HasIndex("statusId");

                    b.HasIndex("upId");

                    b.HasIndex("userId")
                        .HasDatabaseName("IX_Booking_UserId");

                    b.ToTable("tblBooking");
                });

            modelBuilder.Entity("BookingSystem.Models.ClassModel", b =>
                {
                    b.Property<int>("classId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("classId"));

                    b.Property<int?>("classDuration")
                        .HasColumnType("int");

                    b.Property<string>("className")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.Property<string>("countryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("creditToBuy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("maxSlots")
                        .HasColumnType("int");

                    b.Property<DateTime?>("startTime")
                        .HasColumnType("datetime2");

                    b.HasKey("classId");

                    b.HasIndex("countryId")
                        .HasDatabaseName("IX_Class_CountryId");

                    b.ToTable("tblClass");
                });

            modelBuilder.Entity("BookingSystem.Models.CountryModel", b =>
                {
                    b.Property<int>("countryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("countryId"));

                    b.Property<string>("countryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("countryId");

                    b.ToTable("tblCountry");
                });

            modelBuilder.Entity("BookingSystem.Models.PackageModel", b =>
                {
                    b.Property<int>("packageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("packageId"));

                    b.Property<int?>("countryId")
                        .HasColumnType("int");

                    b.Property<string>("countryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("credits")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("expiryDays")
                        .HasColumnType("int");

                    b.Property<string>("packageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("packageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("packagePrice")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("packageId");

                    b.HasIndex("countryId")
                        .HasDatabaseName("IX_Package_CountryId");

                    b.ToTable("tblPackage");
                });

            modelBuilder.Entity("BookingSystem.Models.StatusModel", b =>
                {
                    b.Property<int>("statusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("statusId"));

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("statusId");

                    b.ToTable("tblStatus");
                });

            modelBuilder.Entity("BookingSystem.Models.TransactionHistoryModel", b =>
                {
                    b.Property<int>("thId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("thId"));

                    b.Property<int>("classId")
                        .HasColumnType("int");

                    b.Property<string>("className")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("refundCredits")
                        .HasColumnType("int");

                    b.Property<DateTime>("transactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("transactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("upId")
                        .HasColumnType("int");

                    b.Property<int>("usedCredits")
                        .HasColumnType("int");

                    b.HasKey("thId");

                    b.HasIndex("classId");

                    b.HasIndex("upId")
                        .HasDatabaseName("IX_TransactionHistory_UserPackageId");

                    b.ToTable("tblTransactionHistory");
                });

            modelBuilder.Entity("BookingSystem.Models.UserModel", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<int?>("countryId")
                        .HasColumnType("int");

                    b.Property<string>("countryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isVarify")
                        .HasColumnType("bit");

                    b.Property<string>("userEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("verifyPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.HasIndex("countryId")
                        .HasDatabaseName("IX_User_CountryId");

                    b.ToTable("tblUser");
                });

            modelBuilder.Entity("BookingSystem.Models.UserPackageModel", b =>
                {
                    b.Property<int>("upId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("upId"));

                    b.Property<int?>("creditRemain")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("expiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isExpire")
                        .HasColumnType("bit");

                    b.Property<int>("packageId")
                        .HasColumnType("int");

                    b.Property<string>("packagename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("packcageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("purchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("upId");

                    b.HasIndex("packageId");

                    b.HasIndex("userId")
                        .HasDatabaseName("IX_UserPackage_UserId");

                    b.ToTable("tblUserPackage");
                });

            modelBuilder.Entity("BookingSystem.Models.WaitlistModel", b =>
                {
                    b.Property<int>("wailistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wailistId"));

                    b.Property<DateTime?>("addAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("bookingId")
                        .HasColumnType("int");

                    b.Property<int>("classId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("statusId")
                        .HasColumnType("int");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("wailistId");

                    b.HasIndex("bookingId")
                        .HasDatabaseName("IX_Waitlist_BookingId");

                    b.HasIndex("classId");

                    b.HasIndex("statusId");

                    b.ToTable("tblWaitlist");
                });

            modelBuilder.Entity("BookingSystem.Models.BookingModel", b =>
                {
                    b.HasOne("BookingSystem.Models.ClassModel", "Class")
                        .WithMany()
                        .HasForeignKey("classId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.StatusModel", "Status")
                        .WithMany()
                        .HasForeignKey("statusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.UserPackageModel", "UserPackage")
                        .WithMany()
                        .HasForeignKey("upId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Status");

                    b.Navigation("User");

                    b.Navigation("UserPackage");
                });

            modelBuilder.Entity("BookingSystem.Models.ClassModel", b =>
                {
                    b.HasOne("BookingSystem.Models.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BookingSystem.Models.PackageModel", b =>
                {
                    b.HasOne("BookingSystem.Models.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BookingSystem.Models.TransactionHistoryModel", b =>
                {
                    b.HasOne("BookingSystem.Models.ClassModel", "Class")
                        .WithMany()
                        .HasForeignKey("classId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.UserPackageModel", "UserPackage")
                        .WithMany()
                        .HasForeignKey("upId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("UserPackage");
                });

            modelBuilder.Entity("BookingSystem.Models.UserModel", b =>
                {
                    b.HasOne("BookingSystem.Models.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BookingSystem.Models.UserPackageModel", b =>
                {
                    b.HasOne("BookingSystem.Models.PackageModel", "Package")
                        .WithMany()
                        .HasForeignKey("packageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookingSystem.Models.WaitlistModel", b =>
                {
                    b.HasOne("BookingSystem.Models.BookingModel", "Booking")
                        .WithMany()
                        .HasForeignKey("bookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.ClassModel", "Class")
                        .WithMany()
                        .HasForeignKey("classId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.StatusModel", "Status")
                        .WithMany()
                        .HasForeignKey("statusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Class");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
